var moment=require("../../moment");exports.create={array:function(e){e.expect(8),e.ok(moment([2010]).toDate()instanceof Date,"[2010]"),e.ok(moment([2010,1]).toDate()instanceof Date,"[2010, 1]"),e.ok(moment([2010,1,12]).toDate()instanceof Date,"[2010, 1, 12]"),e.ok(moment([2010,1,12,1]).toDate()instanceof Date,"[2010, 1, 12, 1]"),e.ok(moment([2010,1,12,1,1]).toDate()instanceof Date,"[2010, 1, 12, 1, 1]"),e.ok(moment([2010,1,12,1,1,1]).toDate()instanceof Date,"[2010, 1, 12, 1, 1, 1]"),e.ok(moment([2010,1,12,1,1,1,1]).toDate()instanceof Date,"[2010, 1, 12, 1, 1, 1, 1]"),e.equal(+moment(new Date(2010,1,14,15,25,50,125)),+moment([2010,1,14,15,25,50,125]),"constructing with array === constructing with new Date()"),e.done()},"array copying":function(e){var a=[2009,11];e.expect(1),moment(a),e.deepEqual(a,[2009,11],"initializer should not mutate the original array"),e.done()},number:function(e){e.expect(3),e.ok(moment(1e3).toDate()instanceof Date,"1000"),e.ok(1e3===moment(1e3).valueOf(),"testing valueOf"),e.ok(1e3===moment.utc(1e3).valueOf(),"testing valueOf"),e.done()},unix:function(e){e.expect(8),e.equal(moment.unix(1).valueOf(),1e3,"1 unix timestamp == 1000 Date.valueOf"),e.equal(moment(1e3).unix(),1,"1000 Date.valueOf == 1 unix timestamp"),e.equal(moment.unix(1e3).valueOf(),1e6,"1000 unix timestamp == 1000000 Date.valueOf"),e.equal(moment(1500).unix(),1,"1500 Date.valueOf == 1 unix timestamp"),e.equal(moment(1900).unix(),1,"1900 Date.valueOf == 1 unix timestamp"),e.equal(moment(2100).unix(),2,"2100 Date.valueOf == 2 unix timestamp"),e.equal(moment(1333129333524).unix(),1333129333,"1333129333524 Date.valueOf == 1333129333 unix timestamp"),e.equal(moment(0x4bc795c5d4620).unix(),1333129333524,"1333129333524000 Date.valueOf == 1333129333524 unix timestamp"),e.done()},date:function(e){e.expect(1),e.ok(moment(new Date).toDate()instanceof Date,"new Date()"),e.done()},"date mutation":function(e){e.expect(1);var a=new Date;e.ok(moment(a).toDate()!==a,"the date moment uses should not be the date passed in"),e.done()},moment:function(e){e.expect(2),e.ok(moment(moment()).toDate()instanceof Date,"moment(moment())"),e.ok(moment(moment(moment())).toDate()instanceof Date,"moment(moment(moment()))"),e.done()},"cloning moment should only copy own properties":function(e){e.expect(2),e.ok(!moment().clone().hasOwnProperty("month"),"Should not clone prototype methods"),e.ok(!moment().clone().hasOwnProperty("_lang"),"Should not clone prototype objects"),e.done()},undefined:function(e){e.expect(1),e.ok(moment().toDate()instanceof Date,"undefined"),e.done()},"string without format":function(e){e.expect(2),e.ok(moment("Aug 9, 1995").toDate()instanceof Date,"Aug 9, 1995"),e.ok(moment("Mon, 25 Dec 1995 13:30:00 GMT").toDate()instanceof Date,"Mon, 25 Dec 1995 13:30:00 GMT"),e.done()},"string without format - json":function(e){e.expect(5),e.equal(moment("Date(1325132654000)").valueOf(),1325132654e3,"Date(1325132654000)"),e.equal(moment("Date(-1325132654000)").valueOf(),-1325132654e3,"Date(-1325132654000)"),e.equal(moment("/Date(1325132654000)/").valueOf(),1325132654e3,"/Date(1325132654000)/"),e.equal(moment("/Date(1325132654000+0700)/").valueOf(),1325132654e3,"/Date(1325132654000+0700)/"),e.equal(moment("/Date(1325132654000-0700)/").valueOf(),1325132654e3,"/Date(1325132654000-0700)/"),e.done()},"string with format dropped am/pm bug":function(e){moment.lang("en"),e.expect(3),e.equal(moment("05/1/2012","MM/DD/YYYY h:m:s a").format("MM/DD/YYYY"),"05/01/2012","should not break if am/pm is left off from the parsing tokens"),e.equal(moment("05/1/2012 12:25:00 am","MM/DD/YYYY h:m:s a").format("MM/DD/YYYY"),"05/01/2012","should not break if am/pm is left off from the parsing tokens"),e.equal(moment("05/1/2012 12:25:00 pm","MM/DD/YYYY h:m:s a").format("MM/DD/YYYY"),"05/01/2012","should not break if am/pm is left off from the parsing tokens"),e.done()},"empty string with formats":function(e){e.expect(3),e.equal(moment(" ","MM").format("YYYY-MM-DD HH:mm:ss"),"0000-01-01 00:00:00","should not break if input is an empty string"),e.equal(moment(" ","DD").format("YYYY-MM-DD HH:mm:ss"),"0000-01-01 00:00:00","should not break if input is an empty string"),e.equal(moment(" ",["MM","DD"]).format("YYYY-MM-DD HH:mm:ss"),"0000-01-01 00:00:00","should not break if input is an empty string"),e.done()},"matching am/pm":function(e){e.expect(1),e.equal(moment("2012-09-03T03:00PM","YYYY-MM-DDThh:mmA").format("YYYY-MM-DDThh:mmA"),"2012-09-03T03:00PM","am/pm should parse correctly even if the input string contains other letters"),e.done()},"string with format":function(e){moment.lang("en");var a,o=[["MM-DD-YYYY","12-02-1999"],["DD-MM-YYYY","12-02-1999"],["DD/MM/YYYY","12/02/1999"],["DD_MM_YYYY","12_02_1999"],["DD:MM:YYYY","12:02:1999"],["D-M-YY","2-2-99"],["YY","99"],["DDD-YYYY","300-1999"],["DD-MM-YYYY h:m:s","12-02-1999 2:45:10"],["DD-MM-YYYY h:m:s a","12-02-1999 2:45:10 am"],["DD-MM-YYYY h:m:s a","12-02-1999 2:45:10 pm"],["h:mm a","12:00 pm"],["h:mm a","12:30 pm"],["h:mm a","12:00 am"],["h:mm a","12:30 am"],["HH:mm","12:00"],["YYYY-MM-DDTHH:mm:ss","2011-11-11T11:11:11"],["MM-DD-YYYY \\M","12-02-1999 M"],["ddd MMM DD HH:mm:ss YYYY","Tue Apr 07 22:52:51 2009"],["HH:mm:ss","12:00:00"],["HH:mm:ss","12:30:00"],["HH:mm:ss","00:00:00"],["HH:mm:ss S","00:30:00 1"],["HH:mm:ss SS","00:30:00 12"],["HH:mm:ss SSS","00:30:00 123"],["HH:mm:ss S","00:30:00 7"],["HH:mm:ss SS","00:30:00 78"],["HH:mm:ss SSS","00:30:00 789"],["X.SSS","1234567890.123"]];for(e.expect(o.length),a=0;o.length>a;a++)e.equal(moment(o[a][1],o[a][0]).format(o[a][0]),o[a][1],o[a][0]+" ---> "+o[a][1]);e.done()},"unix timestamp format":function(e){var a=["X","X.S","X.SS","X.SSS"];e.expect(4*a.length);for(var o=0;a.length>o;o++){var n=a[o];e.equal(moment("1234567890",n).valueOf(),123456789e4,n+" matches timestamp without milliseconds"),e.equal(moment("1234567890.1",n).valueOf(),1234567890100,n+" matches timestamp with deciseconds"),e.equal(moment("1234567890.12",n).valueOf(),1234567890120,n+" matches timestamp with centiseconds"),e.equal(moment("1234567890.123",n).valueOf(),1234567890123,n+" matches timestamp with milliseconds")}e.done()},"string with format no separators":function(e){moment.lang("en");var a,o=[["MMDDYYYY","12021999"],["DDMMYYYY","12021999"],["YYYYMMDD","19991202"],["DDMMMYYYY","10Sep2001"]];for(e.expect(o.length),a=0;o.length>a;a++)e.equal(moment(o[a][1],o[a][0]).format(o[a][0]),o[a][1],o[a][0]+" ---> "+o[a][1]);e.done()},"string with format (timezone)":function(e){e.expect(8),e.equal(moment("5 -0700","H ZZ").toDate().getUTCHours(),12,'parse hours "5 -0700" ---> "H ZZ"'),e.equal(moment("5 -07:00","H Z").toDate().getUTCHours(),12,'parse hours "5 -07:00" ---> "H Z"'),e.equal(moment("5 -0730","H ZZ").toDate().getUTCMinutes(),30,'parse hours "5 -0730" ---> "H ZZ"'),e.equal(moment("5 -07:30","H Z").toDate().getUTCMinutes(),30,'parse hours "5 -07:30" ---> "H Z"'),e.equal(moment("5 +0100","H ZZ").toDate().getUTCHours(),4,'parse hours "5 +0100" ---> "H ZZ"'),e.equal(moment("5 +01:00","H Z").toDate().getUTCHours(),4,'parse hours "5 +01:00" ---> "H Z"'),e.equal(moment("5 +0130","H ZZ").toDate().getUTCMinutes(),30,'parse hours "5 +0130" ---> "H ZZ"'),e.equal(moment("5 +01:30","H Z").toDate().getUTCMinutes(),30,'parse hours "5 +01:30" ---> "H Z"'),e.done()},"string with format (timezone offset)":function(e){e.expect(4);var a=new Date(Date.UTC(2011,0,1,1)),o=moment("2011 1 1 0 -01:00","YYYY MM DD HH Z");e.equal(a.getHours(),o.hours(),"date created with utc == parsed string with timezone offset"),e.equal(+a,+o,"date created with utc == parsed string with timezone offset");var n=moment("2011 2 1 10 -05:00","YYYY MM DD HH Z"),t=moment("2011 2 1 8 -07:00","YYYY MM DD HH Z");e.equal(n.hours(),t.hours(),"10 am central time == 8 am pacific time");var m=moment.utc("Fri, 20 Jul 2012 17:15:00","ddd, DD MMM YYYY HH:mm:ss"),d=moment.utc("Fri, 20 Jul 2012 10:15:00 -0700","ddd, DD MMM YYYY HH:mm:ss ZZ");e.equal(m.hours(),d.hours(),"parse timezone offset in utc"),e.done()},"string with array of formats":function(e){e.expect(3),e.equal(moment("13-02-1999",["MM-DD-YYYY","DD-MM-YYYY"]).format("MM DD YYYY"),"02 13 1999","switching month and day"),e.equal(moment("02-13-1999",["MM/DD/YYYY","YYYY-MM-DD","MM-DD-YYYY"]).format("MM DD YYYY"),"02 13 1999","year last"),e.equal(moment("1999-02-13",["MM/DD/YYYY","YYYY-MM-DD","MM-DD-YYYY"]).format("MM DD YYYY"),"02 13 1999","year first"),e.done()},"string with format - years":function(e){e.expect(4),e.equal(moment("67","YY").format("YYYY"),"2067","67 > 2067"),e.equal(moment("68","YY").format("YYYY"),"2068","68 > 2068"),e.equal(moment("69","YY").format("YYYY"),"1969","69 > 1969"),e.equal(moment("70","YY").format("YYYY"),"1970","70 > 1970"),e.done()},"implicit cloning":function(e){e.expect(2);var a=moment([2011,10,10]),o=moment(a);a.month(5),e.equal(o.month(),10,"Calling moment() on a moment will create a clone"),e.equal(a.month(),5,"Calling moment() on a moment will create a clone"),e.done()},"explicit cloning":function(e){e.expect(2);var a=moment([2011,10,10]),o=a.clone();a.month(5),e.equal(o.month(),10,"Calling moment() on a moment will create a clone"),e.equal(a.month(),5,"Calling moment() on a moment will create a clone"),e.done()},"cloning carrying over utc mode":function(e){e.expect(8),e.equal(moment().local().clone()._isUTC,!1,"An explicit cloned local moment should have _isUTC == false"),e.equal(moment().utc().clone()._isUTC,!0,"An cloned utc moment should have _isUTC == true"),e.equal(moment().clone()._isUTC,!1,"An explicit cloned local moment should have _isUTC == false"),e.equal(moment.utc().clone()._isUTC,!0,"An explicit cloned utc moment should have _isUTC == true"),e.equal(moment(moment().local())._isUTC,!1,"An implicit cloned local moment should have _isUTC == false"),e.equal(moment(moment().utc())._isUTC,!0,"An implicit cloned utc moment should have _isUTC == true"),e.equal(moment(moment())._isUTC,!1,"An implicit cloned local moment should have _isUTC == false"),e.equal(moment(moment.utc())._isUTC,!0,"An implicit cloned utc moment should have _isUTC == true"),e.done()},"parsing iso":function(e){var a=moment([2011,9,8]).zone(),o=function(e){return 10>e?"0"+e:""+e},n=a>0?Math.floor(a/60):Math.ceil(a/60),t=a-60*n,m=a>0?"-"+o(n)+":"+o(t):"+"+o(-n)+":"+o(-t),d=m.replace(":",""),u=[["2011-10-08","2011-10-08T00:00:00.000"+m],["2011-10-08T18","2011-10-08T18:00:00.000"+m],["2011-10-08T18:04","2011-10-08T18:04:00.000"+m],["2011-10-08T18:04:20","2011-10-08T18:04:20.000"+m],["2011-10-08T18:04"+m,"2011-10-08T18:04:00.000"+m],["2011-10-08T18:04:20"+m,"2011-10-08T18:04:20.000"+m],["2011-10-08T18:04"+d,"2011-10-08T18:04:00.000"+m],["2011-10-08T18:04:20"+d,"2011-10-08T18:04:20.000"+m],["2011-10-08T18:04:20.1"+d,"2011-10-08T18:04:20.100"+m],["2011-10-08T18:04:20.11"+d,"2011-10-08T18:04:20.110"+m],["2011-10-08T18:04:20.111"+d,"2011-10-08T18:04:20.111"+m],["2011-10-08 18","2011-10-08T18:00:00.000"+m],["2011-10-08 18:04","2011-10-08T18:04:00.000"+m],["2011-10-08 18:04:20","2011-10-08T18:04:20.000"+m],["2011-10-08 18:04"+m,"2011-10-08T18:04:00.000"+m],["2011-10-08 18:04:20"+m,"2011-10-08T18:04:20.000"+m],["2011-10-08 18:04"+d,"2011-10-08T18:04:00.000"+m],["2011-10-08 18:04:20"+d,"2011-10-08T18:04:20.000"+m],["2011-10-08 18:04:20.1"+d,"2011-10-08T18:04:20.100"+m],["2011-10-08 18:04:20.11"+d,"2011-10-08T18:04:20.110"+m],["2011-10-08 18:04:20.111"+d,"2011-10-08T18:04:20.111"+m]];e.expect(u.length);for(var s=0;u.length>s;s++)e.equal(u[s][1],moment(u[s][0]).format("YYYY-MM-DDTHH:mm:ss.SSSZ"),"moment should be able to parse ISO "+u[s][0]);e.done()},"parsing iso Z timezone":function(e){var a,o=[["2011-10-08T18:04Z","2011-10-08T18:04:00.000+00:00"],["2011-10-08T18:04:20Z","2011-10-08T18:04:20.000+00:00"],["2011-10-08T18:04:20.111Z","2011-10-08T18:04:20.111+00:00"]];for(e.expect(o.length),a=0;o.length>a;a++)e.equal(moment.utc(o[a][0]).format("YYYY-MM-DDTHH:mm:ss.SSSZ"),o[a][1],"moment should be able to parse ISO "+o[a][0]);e.done()},"parsing iso Z timezone into local":function(e){e.expect(1);var a=moment("2011-10-08T18:04:20.111Z");e.equal(a.utc().format("YYYY-MM-DDTHH:mm:ss.SSS"),"2011-10-08T18:04:20.111","moment should be able to parse ISO 2011-10-08T18:04:20.111Z"),e.done()},"null":function(e){e.expect(3),e.equal(moment(""),null,"Calling moment('')"),e.equal(moment(null),null,"Calling moment(null)"),e.equal(moment("","YYYY-MM-DD"),null,"Calling moment('', 'YYYY-MM-DD')"),e.done()},"first century":function(e){e.expect(9),e.equal(moment([0,0,1]).format("YYYY-MM-DD"),"0000-01-01","Year AD 0"),e.equal(moment([99,0,1]).format("YYYY-MM-DD"),"0099-01-01","Year AD 99"),e.equal(moment([999,0,1]).format("YYYY-MM-DD"),"0999-01-01","Year AD 999"),e.equal(moment("0 1 1","YYYY MM DD").format("YYYY-MM-DD"),"0000-01-01","Year AD 0"),e.equal(moment("99 1 1","YYYY MM DD").format("YYYY-MM-DD"),"0099-01-01","Year AD 99"),e.equal(moment("999 1 1","YYYY MM DD").format("YYYY-MM-DD"),"0999-01-01","Year AD 999"),e.equal(moment("0 1 1","YYYYY MM DD").format("YYYYY-MM-DD"),"00000-01-01","Year AD 0"),e.equal(moment("99 1 1","YYYYY MM DD").format("YYYYY-MM-DD"),"00099-01-01","Year AD 99"),e.equal(moment("999 1 1","YYYYY MM DD").format("YYYYY-MM-DD"),"00999-01-01","Year AD 999"),e.done()},"six digit years":function(e){e.expect(8),e.equal(moment([-27e4,0,1]).format("YYYYY-MM-DD"),"-270000-01-01","format BC 270,001"),e.equal(moment([27e4,0,1]).format("YYYYY-MM-DD"),"270000-01-01","format AD 270,000"),e.equal(moment("-270000-01-01","YYYYY-MM-DD").toDate().getFullYear(),-27e4,"parse BC 270,001"),e.equal(moment("270000-01-01","YYYYY-MM-DD").toDate().getFullYear(),27e4,"parse AD 270,000"),e.equal(moment("+270000-01-01","YYYYY-MM-DD").toDate().getFullYear(),27e4,"parse AD +270,000"),e.equal(moment.utc("-270000-01-01","YYYYY-MM-DD").toDate().getUTCFullYear(),-27e4,"parse utc BC 270,001"),e.equal(moment.utc("270000-01-01","YYYYY-MM-DD").toDate().getUTCFullYear(),27e4,"parse utc AD 270,000"),e.equal(moment.utc("+270000-01-01","YYYYY-MM-DD").toDate().getUTCFullYear(),27e4,"parse utc AD +270,000"),e.done()},"negative four digit years":function(e){e.expect(2),e.equal(moment("-1000-01-01","YYYYY-MM-DD").toDate().getFullYear(),-1e3,"parse BC 1,001"),e.equal(moment.utc("-1000-01-01","YYYYY-MM-DD").toDate().getUTCFullYear(),-1e3,"parse utc BC 1,001"),e.done()},"parsing into a language":function(e){e.expect(2),moment.lang("parselang",{months:"one_two_three_four_five_six_seven_eight_nine_ten_eleven_twelve".split("_"),monthsShort:"one_two_three_four_five_six_seven_eight_nine_ten_eleven_twelve".split("_")}),moment.lang("en"),e.equal(moment("2012 seven","YYYY MMM","parselang").month(),6,"should be able to parse in a specific language"),moment.lang("parselang"),e.equal(moment("2012 july","YYYY MMM","en").month(),6,"should be able to parse in a specific language"),e.done()}};